{
  "Gaussian Elimination": {
    "prefix": "gaussian",
    "body": [
      "const int MAX_N = ${1:100};",
      "",
      "struct AugmentedMatrix { double mat[MAX_N][MAX_N+1]; };",
      "struct ColumnVector { double vec[MAX_N]; };",
      "",
      "ColumnVector GaussianElimination(int N, AugmentedMatrix Aug) {",
      "  for (int i = 0; i < N-1; ++i) {",
      "    int l = i;",
      "    for (int j = i+1; j < N; ++j)",
      "      if (fabs(Aug.mat[j][i]) > fabs(Aug.mat[l][i]))",
      "        l = j;",
      "    for (int k = i; k <= N; ++k)",
      "      swap(Aug.mat[i][k], Aug.mat[l][k]);",
      "    for (int j = i+1; j < N; ++j)",
      "      for (int k = N; k >= i; --k)",
      "        Aug.mat[j][k] -= Aug.mat[i][k] * Aug.mat[j][i] / Aug.mat[i][i];",
      "  }",
      "  ColumnVector Ans;",
      "  for (int j = N-1; j >= 0; --j) {",
      "    double t = 0.0;",
      "    for (int k = j+1; k < N; ++k)",
      "      t += Aug.mat[j][k] * Ans.vec[k];",
      "    Ans.vec[j] = (Aug.mat[j][N]-t) / Aug.mat[j][j];",
      "  }",
      "  return Ans;",
      "}"
    ],
    "description": "Gaussian Elimination for solving system of linear equations",
    "scope": "cpp"
  }
}
